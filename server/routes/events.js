// Nodes implemented: express.Router (handles request methods), body-parser (handles request body),
// multer (handles image storage and upload)

var router = require('express').Router();
var bodyParser = require('body-parser');

// Useful for parsing image streams
var multer = require('multer');
var upload = multer({ dest: 'storage/' });

module.exports = function(app) {
	/* events routes
	*	GET 	/myeventmanager/events 					=> List all events
	*	POST 	/myeventmanager/events 					=> Create a new event
	*	GET 	/myeventmanager/events/{evt_id} 		=> Retrieve an event
	*	PUT 	/myeventmanager/events/{evt_id} 		=> Update an event
	*	DELETE 	/myeventmanager/events/{evt_id} 		=> Delete an event
	*	POST 	/myeventmanager/events/{evt_id}/join 	=> Join an event
	*	POST 	/myeventmanager/events/{evt_id}/leave 	=> Leave an event
	*
	*	NOTE: When creating a new event, pass data as form-data in Postman
	*	req.file is generated by multer, it is the 'logo' that must exist within the form data
	*	req.body is generated by the text fields of the form data
	*/
	
	router.get('/', app.actions.events.list);
	router.post('/', [app.middlewares.authenticated, upload.single('logo')], app.actions.events.create);
	router.get('/:evtid', app.actions.events.retrieve);
	router.put('/:evtid', [app.middlewares.authenticated, upload.single('logo')], app.actions.events.update);
	router.delete('/:evtid', app.middlewares.authenticated, app.actions.events.delete);
	router.post('/:evtid/join', app.middlewares.authenticated, app.actions.events.join);
	router.post('/:evtid/leave', app.middlewares.authenticated, app.actions.events.leave);
	
	return router;
};